`include "defines.v"

module ctrl(
 
	    input wire			 rst,                  //1bit，复位信号

	    input wire                   stallreq_from_id,     //1bit，来自译码阶段的暂停请求

	    input wire                   stallreq_from_ex,     //1bit，来自执行阶段的暂停请求
	    output reg[5:0]              stall                 //6bit，暂停流水线控制信号
	
);


	always @ (*) begin
		    if(rst == `RstEnable) begin
			       stall <= 6'b000000;
		    end else if(stallreq_from_ex == `Stop) begin
			       stall <= 6'b001111;                   //执行阶段暂停，所以PC地址、取指、译码、执行阶段暂停，访存回写阶段继续
			                                             //所以低4位为1，表示暂停。
		    end else if(stallreq_from_id == `Stop) begin
		        	stall <= 6'b000111;		     //译码阶段暂停，所以PC地址、取指、译码阶段暂停，执行访存回写阶段继续
				                                     //所以低3位为1，表示暂停。
		    end else begin
		        	stall <= 6'b000000;
	     	end //if
	 end  //always
			
endmodule
